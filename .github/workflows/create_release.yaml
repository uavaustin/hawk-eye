on:
  push:
    branches:
      - alw-test-tag

name: Create Tag

jobs:

  create_tag:
    name: Create Tag
    runs-on: ubuntu-latest

    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Fetch tags
        run: git fetch --tags

      - name: Get current version
        run: |
          echo release_version="$(cat version.txt)" >> $GITHUB_ENV

      - name: See if version exists
        id: create_release
        run: |
          if [[ $(git tag -l v$release_version) ]]; then
            echo Version v$release_version already exists.;
            echo "::set-output name=create_release::false";
          else
            echo "::set-output name=create_release::true";
            git tag v$release_version;
            git push origin v$release_version;
          fi

      - name: Check value
        run: echo ${{ steps.create_release.output.create_release }}

  # Conditional on if we have a new tag
  create_release:
    needs: create_tag

    name: Create Release
    runs-on: ubuntu-latest

    if: ${{ needs.create_tag.steps.create_release.outputs.create_release == 'true' }}

    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Tag
        run:  echo release_version="$(cat version.txt)" >> $GITHUB_ENV

      - name: Setup Machine
        run: ./docs/setup_linux.sh

      - name: Authenticate on GCS
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Set up Python 3.6
        uses: actions/setup-python@v2
        with:
          python-version: "3.6"

      - name: Ensure Tests Run
        run: ./setup.py test

      - name: Create hawk_eye .whl package
        run: ./setup.py bdist_wheel

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.release_version}}
          release_name: Release v${{ env.release_version}}
          draft: false
          prerelease: false

      - name: Upload Release Python Wheel
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: './dist/hawk_eye-${{ env.release_version }}-py3-none-any.whl'
          asset_name: 'hawk_eye-${{ env.release_version }}-py3-none-any.whl'
          asset_content_type: application/zip
